---
import starsData from '../data/github-stars.json'

export interface Props {
  stars?: typeof starsData.stars
}

type Repo = {
  nameWithOwner: string
  url: string
  stargazerCount: number
  description: string
  primaryLanguage: {
    name: string
    color: string
  } | null
  starredAt: string
}

const { stars = starsData.stars } = Astro.props
const starredRepos = stars as Repo[]
---

<div>
  {
    starredRepos?.map((repo: Repo) => (
      <div class="repo">
        <div class="repo-header">
          <span>
            <strong>
              <a href={repo.url || '#'}>{repo.nameWithOwner || 'Unknown Repository'}</a>
            </strong>
          </span>

          {repo.primaryLanguage && (
            <span
              class="language"
              style={`--language-color: ${repo.primaryLanguage.color}`}
            >
              {repo.primaryLanguage.name}
            </span>
          )}

          <span>â˜… {(repo.stargazerCount || 0).toLocaleString()}</span>
        </div>
        <p>{repo.description || 'No description available'}</p>
      </div>
    ))
  }
</div>

<style>
  .update-info {
    margin-bottom: 2rem;
    color: var(--text-secondary);
    font-size: 0.9rem;
  }

  .repo {
    margin-bottom: 2rem;
    padding-bottom: 1.5rem;
    border-bottom: 1px solid var(--border-color);

    &:last-child {
      border-bottom: none;
    }
  }

  .repo-header {
    margin-bottom: 0.5rem;

    & > * {
      display: inline-block;
      align-items: center;

      &:not(:first-child) {
        margin-left: 2rem;
      }
    }
  }

  .language {
    display: inline-flex;
    align-items: center;

    &::before {
      content: '';
      display: inline-block;
      width: 0.9rem;
      height: 0.9rem;
      border-radius: 50%;
      margin-right: 0.5rem;
      background-color: var(--language-color);
    }
  }
</style>
