---
import { formatDate } from '../utils/dateUtils'

const { postCount } = Astro.props

const posts = (await Astro.glob('../pages/blog/**/*.{md,mdx}')).sort(
  (a, b) =>
    new Date(b.frontmatter.pubDate || b.frontmatter.updatedDate).valueOf() -
    new Date(a.frontmatter.pubDate || a.frontmatter.updatedDate).valueOf()
)

const slicedPosts = postCount ? posts.slice(0, postCount) : posts
---

<div class="textContainer">
  <slot />
  {
    slicedPosts &&
      slicedPosts.map(
        ({
          url,
          frontmatter: {
            title,
            pubDate,
            updatedDate,
            description,
            showDate = true,
          },
        }) => (
          <a href={url} class="post">
            <h3 class="title">{title}</h3>
            {showDate && (
              <h4 class="date">
                <time datetime={updatedDate || pubDate}>
                  {formatDate(updatedDate || pubDate)}
                </time>
              </h4>
            )}
            {description && <p>{description}</p>}
            <div class="readmore">
              Read <span>→</span>
            </div>
          </a>
        )
      )
  }
  {
    slicedPosts.length !== posts.length && (
      <a class="OutlinedButton" href="/blog/">
        More Posts →
      </a>
    )
  }
</div>

<style>
  .textContainer {
    padding: 5rem 0;
  }

  .post {
    margin: 0 auto 5rem auto;
    text-decoration: none;
    display: block;
  }

  .readmore {
    display: inline-flex;
    align-items: center;
  }

  .readmore span {
    transition: all 0.2s ease-out;
    margin-left: 0.3em;
  }

  .title {
    margin-bottom: 0;
    border-bottom: 1px solid transparent;
    display: inline-flex;
    transition: all 0.2s ease-out;
    line-height: 1.3;
  }

  p {
    margin-bottom: 0.5rem;
  }

  .date {
    font-weight: 200;
    font-size: 1.8rem;
    margin-bottom: 1rem;
    margin-top: 0.6rem;
  }

  .post:hover .title {
    /* border-bottom-color: currentColor; */
    text-decoration: underline;
  }
  .post:hover .readmore span {
    transform: translateX(0.5rem);
  }
</style>
