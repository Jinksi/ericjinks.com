---
import BaseHead from '../components/BaseHead.astro'
import Header from '../components/Nav.astro'
import Footer from '../components/Footer.astro'
import { SITE_TITLE, SITE_DESCRIPTION } from '../config'

type Repo = {
  nameWithOwner: string
  url: string
  stargazerCount: number
  description: string
  primaryLanguage: {
    name: string
    color: string
  }
}

const latestBuildTime = new Date().toLocaleDateString('en-GB', {
  dateStyle: 'medium',
})

const numberToFetch = 100
const token = import.meta.env.GH_TOKEN
const query = `
query($username: String!, $numberToFetch: Int = 100) {
  user(login: $username) {
    starredRepositories(first: $numberToFetch, orderBy: {
      direction: DESC
      field: STARRED_AT
    }) {
      totalCount
      edges {
        node {
          nameWithOwner
          url
          stargazerCount
          description
          primaryLanguage {
            name
            color
          }
        }
      }
    }
  }
}`

const response = await fetch('https://api.github.com/graphql', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    Authorization: `bearer ${token}`,
  },
  body: JSON.stringify({
    query,
    variables: {
      username: 'jinksi',
      numberToFetch,
    },
  }),
})

const { data } = await response.json()

const totalCount = data?.user.starredRepositories.totalCount
const starredRepos = data?.user.starredRepositories.edges.map(
  ({ node }: { node: Repo }) => node
)
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={`Stars – ${SITE_TITLE}`} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header />
    <main>
      <section>
        <div class="container skinny">
          <h2>Starred GitHub Repos</h2>
          <p>
            Most recent {numberToFetch} of {totalCount.toLocaleString()} starred
            repos. Last updated {latestBuildTime}.
          </p>

          {
            starredRepos?.map((repo: Repo) => (
              <div class="repo">
                <div class="repo-header">
                  <span>
                    <strong>
                      <a href={repo.url}>{repo.nameWithOwner}</a>
                    </strong>
                  </span>

                  <span
                    class="language"
                    style={`--language-color: ${repo.primaryLanguage?.color}`}
                  >
                    {repo.primaryLanguage?.name}
                  </span>

                  <span>★ {repo.stargazerCount.toLocaleString()}</span>
                </div>
                <p>{repo.description}</p>
              </div>
            ))
          }
        </div>
      </section>
    </main>

    <Footer />

    <style>
      main {
        padding-top: 5rem;
      }

      .repo-header {
        & > * {
          display: inline-block;
          align-items: center;

          &:not(:first-child) {
            margin-left: 2rem;
          }
        }
      }

      .language {
        display: inline-flex;
        align-items: center;

        &::before {
          content: '';
          display: inline-block;
          width: 0.9rem;
          height: 0.9rem;
          border-radius: 50%;
          margin-right: 0.5rem;
          background-color: var(--language-color);
        }
      }
    </style>
  </body>
</html>
