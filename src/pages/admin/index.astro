---
export const prerender = false // Enable SSR for authentication

import { actions } from 'astro:actions'
import { SITE_TITLE, SITE_DESCRIPTION } from '../../config'
import BaseHead from '../../components/BaseHead.astro'

// Get auth context from middleware
const auth = Astro.locals.auth
const user = auth?.user

const { data: initialCounter, error } = await Astro.callAction(
  actions.getCounter,
  {
    counterName: 'adminCounter',
  }
)
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style>
      body {
        font-family:
          system-ui,
          -apple-system,
          sans-serif;
        background: #f8fafc;
        margin: 0;
        padding: 2rem;
        line-height: 1.6;
        color: #374151;
      }

      .container {
        max-width: 1200px;
        margin: 0 auto;
      }

      .header {
        background: white;
        padding: 1.5rem;
        border-radius: 8px;
        box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);
        margin-bottom: 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .header h1 {
        margin: 0;
        color: #1f2937;
      }

      .user-info {
        display: flex;
        align-items: center;
        gap: 1rem;
      }

      .user-badge {
        background: #e0f2fe;
        color: #0369a1;
        padding: 0.25rem 0.75rem;
        border-radius: 9999px;
        font-weight: 500;
      }

      .logout-button {
        background: #dc2626;
        color: white;
        text-decoration: none;
        padding: 0.5rem 1rem;
        border-radius: 4px;
        font-weight: 500;
        transition: background-color 0.2s;
      }

      .logout-button:hover {
        background: #b91c1c;
      }

      .back-link {
        text-align: center;
        margin-top: 2rem;
      }

      .back-link a {
        color: #6b7280;
        text-decoration: none;
      }

      .back-link a:hover {
        color: #374151;
      }

      .error {
        color: #b91c1c;
        background: #fef2f2;
        margin-top: 1rem;
        padding: 1rem;
        border-radius: 4px;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <header class="header">
        <h1>Admin Dashboard</h1>
        <div class="user-info">
          <span class="user-badge">
            {user?.username || 'Admin'}
          </span>
          <a href="/api/logout/" class="logout-button"> Logout</a>
        </div>
      </header>

      {
        !error && (
          <button id="counter-button" class="Button">
            Counter: {initialCounter?.count ?? 0}
          </button>
        )
      }

      {error && <div class="error">{error.message}</div>}

      <div class="back-link">
        <a href="/">&larr; Back to website</a>
      </div>
    </div>
    <script>
      import { actions } from 'astro:actions'

      const button = document.querySelector('#counter-button')!

      const handleCounterClick = async () => {
        const { data, error } = await actions.incrementCounter({
          counterName: 'adminCounter',
        })
        if (!error) {
          button.textContent = `Counter: ${data.count}`
        }
      }

      button.addEventListener('click', handleCounterClick)
    </script>
  </body>
</html>
